一) 关于分页查询优化：
 利用索引，给关键字段加索引(ID)
 优化前SQL:SELECT * FROM member ORDER BY last_active LIMIT 50,5 

优化后SQL:SELECT * FROM member INNER JOIN (SELECT member_id FROM member ORDER BY last_active LIMIT 50,5) USING (member_id)
注：USING --> 相当于 inner join   里面的  on，如果两个表的条件字段是一样的，就可以用USING(ID) 如果不一样 就只能 on userId=Id

二) union和union all
union用于两张表相同字段的合集，但相同值不会保留，union all可以保留相同值


oracle批量插入
<insert id="batchInsertUserDecimal" parameterType="java.util.List" useGeneratedKeys="false">
insert into CTDECIMAL(firmid,decemical,p8decemical,ztdecemical,status,weekday)
<foreach collection="list" index="index" item="list" open="(" close=")" separator="union">
select
#{list.firmid,jdbcType=VARCHAR},
#{list.decemical,jdbcType=NUMERIC},
#{list.p8Decemical,jdbcType=NUMERIC},
#{list.ztDecemical,jdbcType=NUMERIC},
#{list.status,jdbcType=NUMERIC},
#{list.weekday,jdbcType=NUMERIC}
from dual
</foreach>
</insert>


oracle 批量更新

<update id="batchUpdateUserDecimal" parameterType="java.util.List">
<foreach collection="list" index="index" item="list" open="begin" close=";end;" separator=";">
update CTDECIMAL
<set>
decemical=#{list.decemical,jdbcType=NUMERIC},
p8decemical=#{list.p8Decemical,jdbcType=NUMERIC},
ztdecemical=#{list.ztDecemical,jdbcType=NUMERIC}
</set>
<where>
firmid=#{list.firmid,jdbcType=VARCHAR}
and
status=#{list.status,jdbcType=VARCHAR}
and
weekday = #{list.weekday,jdbcType=NUMERIC}
</where>
</foreach>
</update>


INNODB支持事务，锁行，可以支持高并发。MyIsam不支持事务，锁表，高并发不太好，支持全文索引，不支持外键。
索引----
主键索引、唯一索引、普通索引、全文索引（InnoDb引擎不支持)、联合索引。

聚簇索引和非聚簇索引的区别
1、聚簇索引就是数据和索引放在一块儿，找到索引就找到了数据
2、非聚簇索引是把索引和数据分开存放，先找到内存中的索引，再根据索引去进行第二次查找。
联合索引、唯一索引、前缀索引都是非聚簇索引

聚簇索引默认为主键，如果不设主键，则默认一个唯一且非空索引为主键索引。
接上--
数据都是唯一不重复的，那么用数据结构B树来进行索引构建，提升查询效率。

索引失效的几种常见原因
1、联合索引 没有满足最左前缀匹配，即最左第一个索引没用上的时候，会失效，或者ABC里使用了AC 没用B 
2、使用！=的时候或者<>的时候   !=和<> 都表示不等
3、is null.is not null
4、like 模糊查询的时候，%加在条件右边 --->   "name%"  这样不会失效，其他都会失效。
5、用or （听说可以换成union）
